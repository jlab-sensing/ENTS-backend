"""updated loggers for ttn registration

Revision ID: fd48c93ccf7b
Revises: c098fa612f87
Create Date: 2025-08-27 12:52:29.773199

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "fd48c93ccf7b"
down_revision = "c098fa612f87"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # First add uuid column as nullable
    op.add_column("logger", sa.Column("uuid", sa.UUID(), nullable=True))

    # Generate unique UUIDs for existing rows
    op.execute(
        """
        UPDATE logger 
        SET uuid = gen_random_uuid() 
        WHERE uuid IS NULL
    """
    )

    # Now make the uuid column NOT NULL
    op.alter_column("logger", "uuid", nullable=False)

    # Add other columns
    op.add_column("logger", sa.Column("type", sa.Text(), nullable=True))
    op.add_column("logger", sa.Column("device_eui", sa.Text(), nullable=True))
    op.add_column("logger", sa.Column("description", sa.Text(), nullable=True))

    # Add date_created as nullable first
    op.add_column("logger", sa.Column("date_created", sa.DateTime(), nullable=True))
    # Set default date for existing rows
    op.execute(
        """
        UPDATE logger 
        SET date_created = NOW() 
        WHERE date_created IS NULL
    """
    )
    # Make it NOT NULL
    op.alter_column("logger", "date_created", nullable=False)

    op.add_column("logger", sa.Column("user_id", sa.UUID(), nullable=True))

    # Add constraints
    op.create_unique_constraint("uq_logger_uuid", "logger", ["uuid"])
    op.create_foreign_key("fk_logger_user_id", "logger", "user", ["user_id"], ["id"])

    # Drop old columns
    op.drop_column("logger", "mac")
    op.drop_column("logger", "hostname")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add back old columns
    op.add_column(
        "logger", sa.Column("hostname", sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "logger",
        sa.Column("mac", postgresql.MACADDR(), autoincrement=False, nullable=True),
    )

    # Drop constraints
    op.drop_constraint("fk_logger_user_id", "logger", type_="foreignkey")
    op.drop_constraint("uq_logger_uuid", "logger", type_="unique")

    # Drop new columns
    op.drop_column("logger", "user_id")
    op.drop_column("logger", "date_created")
    op.drop_column("logger", "description")
    op.drop_column("logger", "device_eui")
    op.drop_column("logger", "type")
    op.drop_column("logger", "uuid")

    # ### end Alembic commands ###
